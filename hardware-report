
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.7 (git sha1 UNKNOWN, clang 9.0.0 -fPIC -Os)


-- Executing script file `run_yosys.ys' --

1. Executing Verilog-2005 frontend.
Parsing Verilog input from `mat_vect_mult2.v' to AST representation.
Generating RTLIL representation for module `\mat_vect_mult2'.
Warning: Replacing memory \inp_vect_reg with list of registers. See mat_vect_mult2.v:45
Successfully finished Verilog frontend.

2. Executing SYNTH_XILINX pass.

2.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\MUXCY'.
Generating RTLIL representation for module `\MUXF7'.
Generating RTLIL representation for module `\MUXF8'.
Generating RTLIL representation for module `\XORCY'.
Generating RTLIL representation for module `\CARRY4'.
Generating RTLIL representation for module `\FDRE'.
Generating RTLIL representation for module `\FDSE'.
Generating RTLIL representation for module `\FDCE'.
Generating RTLIL representation for module `\FDPE'.
Successfully finished Verilog frontend.

2.2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\BSCANE2'.
Generating RTLIL representation for module `\BUFGCE'.
Generating RTLIL representation for module `\BUFGCE_1'.
Generating RTLIL representation for module `\BUFGCTRL'.
Generating RTLIL representation for module `\BUFGMUX'.
Generating RTLIL representation for module `\BUFGMUX_1'.
Generating RTLIL representation for module `\BUFGMUX_CTRL'.
Generating RTLIL representation for module `\BUFH'.
Generating RTLIL representation for module `\BUFHCE'.
Generating RTLIL representation for module `\BUFIO'.
Generating RTLIL representation for module `\BUFMR'.
Generating RTLIL representation for module `\BUFMRCE'.
Generating RTLIL representation for module `\BUFR'.
Generating RTLIL representation for module `\CAPTUREE2'.
Generating RTLIL representation for module `\CFGLUT5'.
Generating RTLIL representation for module `\DCIRESET'.
Generating RTLIL representation for module `\DNA_PORT'.
Generating RTLIL representation for module `\DSP48E1'.
Generating RTLIL representation for module `\EFUSE_USR'.
Generating RTLIL representation for module `\FIFO18E1'.
Generating RTLIL representation for module `\FIFO36E1'.
Generating RTLIL representation for module `\FRAME_ECCE2'.
Generating RTLIL representation for module `\GTHE2_CHANNEL'.
Generating RTLIL representation for module `\GTHE2_COMMON'.
Generating RTLIL representation for module `\GTPE2_CHANNEL'.
Generating RTLIL representation for module `\GTPE2_COMMON'.
Generating RTLIL representation for module `\GTXE2_CHANNEL'.
Generating RTLIL representation for module `\GTXE2_COMMON'.
Generating RTLIL representation for module `\IBUF_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUF_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUFDS'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUFDS_GTE2'.
Generating RTLIL representation for module `\IBUFDS_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUFDS_INTERMDISABLE'.
Generating RTLIL representation for module `\ICAPE2'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDR_2CLK'.
Generating RTLIL representation for module `\IDELAYCTRL'.
Generating RTLIL representation for module `\IDELAYE2'.
Generating RTLIL representation for module `\IN_FIFO'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\IOBUF_DCIEN'.
Generating RTLIL representation for module `\IOBUF_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFDS'.
Generating RTLIL representation for module `\IOBUFDS_DCIEN'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT_DCIEN'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT_INTERMDISABLE'.
Generating RTLIL representation for module `\ISERDESE2'.
Generating RTLIL representation for module `\KEEPER'.
Generating RTLIL representation for module `\LDCE'.
Generating RTLIL representation for module `\LDPE'.
Generating RTLIL representation for module `\LUT6_2'.
Generating RTLIL representation for module `\MMCME2_ADV'.
Generating RTLIL representation for module `\MMCME2_BASE'.
Generating RTLIL representation for module `\OBUFDS'.
Generating RTLIL representation for module `\OBUFT'.
Generating RTLIL representation for module `\OBUFTDS'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODELAYE2'.
Generating RTLIL representation for module `\OSERDESE2'.
Generating RTLIL representation for module `\OUT_FIFO'.
Generating RTLIL representation for module `\PHASER_IN'.
Generating RTLIL representation for module `\PHASER_IN_PHY'.
Generating RTLIL representation for module `\PHASER_OUT'.
Generating RTLIL representation for module `\PHASER_OUT_PHY'.
Generating RTLIL representation for module `\PHASER_REF'.
Generating RTLIL representation for module `\PHY_CONTROL'.
Generating RTLIL representation for module `\PLLE2_ADV'.
Generating RTLIL representation for module `\PLLE2_BASE'.
Generating RTLIL representation for module `\PULLDOWN'.
Generating RTLIL representation for module `\PULLUP'.
Generating RTLIL representation for module `\RAM128X1S'.
Generating RTLIL representation for module `\RAM256X1S'.
Generating RTLIL representation for module `\RAM32M'.
Generating RTLIL representation for module `\RAM32X1D'.
Generating RTLIL representation for module `\RAM32X1S'.
Generating RTLIL representation for module `\RAM32X1S_1'.
Generating RTLIL representation for module `\RAM32X2S'.
Generating RTLIL representation for module `\RAM64M'.
Generating RTLIL representation for module `\RAM64X1S'.
Generating RTLIL representation for module `\RAM64X1S_1'.
Generating RTLIL representation for module `\RAM64X2S'.
Generating RTLIL representation for module `\ROM128X1'.
Generating RTLIL representation for module `\ROM256X1'.
Generating RTLIL representation for module `\ROM32X1'.
Generating RTLIL representation for module `\ROM64X1'.
Generating RTLIL representation for module `\SRL16E'.
Generating RTLIL representation for module `\SRLC32E'.
Generating RTLIL representation for module `\STARTUPE2'.
Generating RTLIL representation for module `\USR_ACCESSE2'.
Generating RTLIL representation for module `\XADC'.
Successfully finished Verilog frontend.

2.3. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/brams_bb.v' to AST representation.
Generating RTLIL representation for module `\RAMB18E1'.
Generating RTLIL representation for module `\RAMB36E1'.
Successfully finished Verilog frontend.

2.4. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/drams_bb.v' to AST representation.
Generating RTLIL representation for module `\RAM64X1D'.
Generating RTLIL representation for module `\RAM128X1D'.
Successfully finished Verilog frontend.

2.5. Executing HIERARCHY pass (managing design hierarchy).

2.5.1. Analyzing design hierarchy..
Top module:  \mat_vect_mult2

2.5.2. Analyzing design hierarchy..
Top module:  \mat_vect_mult2
Removed 0 unused modules.

2.6. Executing SYNTH pass.

2.6.1. Executing PROC pass (convert processes to netlists).

2.6.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.6.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$mat_vect_mult2.v:70$9 in module mat_vect_mult2.
Removed a total of 1 dead cases.

2.6.1.3. Executing PROC_INIT pass (extract init attributes).

2.6.1.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \areset in `\mat_vect_mult2.$proc$mat_vect_mult2.v:42$37'.
Found async reset \areset in `\mat_vect_mult2.$proc$mat_vect_mult2.v:42$36'.
Found async reset \areset in `\mat_vect_mult2.$proc$mat_vect_mult2.v:121$32'.
Found async reset \areset in `\mat_vect_mult2.$proc$mat_vect_mult2.v:109$28'.
Found async reset \areset in `\mat_vect_mult2.$proc$mat_vect_mult2.v:98$26'.
Found async reset \areset in `\mat_vect_mult2.$proc$mat_vect_mult2.v:84$21'.
Found async reset \areset in `\mat_vect_mult2.$proc$mat_vect_mult2.v:70$9'.
Found async reset \areset in `\mat_vect_mult2.$proc$mat_vect_mult2.v:55$2'.

2.6.1.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\mat_vect_mult2.$proc$mat_vect_mult2.v:1$38'.
     1/2: $0\inp_vect_lat[1][7:0]
     2/2: $0\inp_vect_lat[0][7:0]
Creating decoders for process `\mat_vect_mult2.$proc$mat_vect_mult2.v:42$37'.
     1/1: $0\inp_vect_reg[1][7:0]
Creating decoders for process `\mat_vect_mult2.$proc$mat_vect_mult2.v:42$36'.
     1/1: $0\inp_vect_reg[0][7:0]
Creating decoders for process `\mat_vect_mult2.$proc$mat_vect_mult2.v:121$32'.
     1/1: $0\count[0:0]
Creating decoders for process `\mat_vect_mult2.$proc$mat_vect_mult2.v:109$28'.
     1/1: $0\m_axis_tlast[0:0]
Creating decoders for process `\mat_vect_mult2.$proc$mat_vect_mult2.v:98$26'.
     1/1: $0\m_axis_tvalid[0:0]
Creating decoders for process `\mat_vect_mult2.$proc$mat_vect_mult2.v:84$21'.
     1/1: $0\slice[0:0]
Creating decoders for process `\mat_vect_mult2.$proc$mat_vect_mult2.v:70$9'.
     1/8: $3$mem2reg_rd$\inp_vect_lat$mat_vect_mult2.v:76$1_DATA[7:0]$17
     2/8: $2$mem2reg_rd$\inp_vect_lat$mat_vect_mult2.v:76$1_DATA[7:0]$16
     3/8: $2$mem2reg_rd$\inp_vect_lat$mat_vect_mult2.v:76$1_ADDR[0:0]$15
     4/8: $1$mem2reg_rd$\inp_vect_lat$mat_vect_mult2.v:76$1_DATA[7:0]$13
     5/8: $1$mem2reg_rd$\inp_vect_lat$mat_vect_mult2.v:76$1_ADDR[0:0]$12
     6/8: $0$mem2reg_rd$\inp_vect_lat$mat_vect_mult2.v:76$1_DATA[7:0]$11
     7/8: $0$mem2reg_rd$\inp_vect_lat$mat_vect_mult2.v:76$1_ADDR[0:0]$10
     8/8: $0\m_axis_tdata[16:0]
Creating decoders for process `\mat_vect_mult2.$proc$mat_vect_mult2.v:55$2'.
     1/1: $0\s_axis_tready[0:0]

2.6.1.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\mat_vect_mult2.\inp_vect_lat[0]' from process `\mat_vect_mult2.$proc$mat_vect_mult2.v:1$38'.
No latch inferred for signal `\mat_vect_mult2.\inp_vect_lat[1]' from process `\mat_vect_mult2.$proc$mat_vect_mult2.v:1$38'.

2.6.1.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\mat_vect_mult2.\inp_vect_reg[1]' using process `\mat_vect_mult2.$proc$mat_vect_mult2.v:42$37'.
  created $adff cell `$procdff$92' with positive edge clock and positive level reset.
Creating register for signal `\mat_vect_mult2.\inp_vect_reg[0]' using process `\mat_vect_mult2.$proc$mat_vect_mult2.v:42$36'.
  created $adff cell `$procdff$93' with positive edge clock and positive level reset.
Creating register for signal `\mat_vect_mult2.\count' using process `\mat_vect_mult2.$proc$mat_vect_mult2.v:121$32'.
  created $adff cell `$procdff$94' with positive edge clock and positive level reset.
Creating register for signal `\mat_vect_mult2.\m_axis_tlast' using process `\mat_vect_mult2.$proc$mat_vect_mult2.v:109$28'.
  created $adff cell `$procdff$95' with positive edge clock and positive level reset.
Creating register for signal `\mat_vect_mult2.\m_axis_tvalid' using process `\mat_vect_mult2.$proc$mat_vect_mult2.v:98$26'.
  created $adff cell `$procdff$96' with positive edge clock and positive level reset.
Creating register for signal `\mat_vect_mult2.\slice' using process `\mat_vect_mult2.$proc$mat_vect_mult2.v:84$21'.
  created $adff cell `$procdff$97' with positive edge clock and positive level reset.
Creating register for signal `\mat_vect_mult2.\m_axis_tdata' using process `\mat_vect_mult2.$proc$mat_vect_mult2.v:70$9'.
  created $adff cell `$procdff$98' with positive edge clock and positive level reset.
Creating register for signal `\mat_vect_mult2.$mem2reg_rd$\inp_vect_lat$mat_vect_mult2.v:76$1_ADDR' using process `\mat_vect_mult2.$proc$mat_vect_mult2.v:70$9'.
  created $adff cell `$procdff$99' with positive edge clock and positive level reset.
Creating register for signal `\mat_vect_mult2.$mem2reg_rd$\inp_vect_lat$mat_vect_mult2.v:76$1_DATA' using process `\mat_vect_mult2.$proc$mat_vect_mult2.v:70$9'.
  created $adff cell `$procdff$100' with positive edge clock and positive level reset.
Creating register for signal `\mat_vect_mult2.\s_axis_tready' using process `\mat_vect_mult2.$proc$mat_vect_mult2.v:55$2'.
  created $adff cell `$procdff$101' with positive edge clock and positive level reset.

2.6.1.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `mat_vect_mult2.$proc$mat_vect_mult2.v:1$38'.
Removing empty process `mat_vect_mult2.$proc$mat_vect_mult2.v:42$37'.
Removing empty process `mat_vect_mult2.$proc$mat_vect_mult2.v:42$36'.
Found and cleaned up 2 empty switches in `\mat_vect_mult2.$proc$mat_vect_mult2.v:121$32'.
Removing empty process `mat_vect_mult2.$proc$mat_vect_mult2.v:121$32'.
Found and cleaned up 2 empty switches in `\mat_vect_mult2.$proc$mat_vect_mult2.v:109$28'.
Removing empty process `mat_vect_mult2.$proc$mat_vect_mult2.v:109$28'.
Found and cleaned up 2 empty switches in `\mat_vect_mult2.$proc$mat_vect_mult2.v:98$26'.
Removing empty process `mat_vect_mult2.$proc$mat_vect_mult2.v:98$26'.
Found and cleaned up 2 empty switches in `\mat_vect_mult2.$proc$mat_vect_mult2.v:84$21'.
Removing empty process `mat_vect_mult2.$proc$mat_vect_mult2.v:84$21'.
Found and cleaned up 3 empty switches in `\mat_vect_mult2.$proc$mat_vect_mult2.v:70$9'.
Removing empty process `mat_vect_mult2.$proc$mat_vect_mult2.v:70$9'.
Found and cleaned up 1 empty switch in `\mat_vect_mult2.$proc$mat_vect_mult2.v:55$2'.
Removing empty process `mat_vect_mult2.$proc$mat_vect_mult2.v:55$2'.
Cleaned up 12 empty switches.

2.6.2. Executing OPT_EXPR pass (perform const folding).
Replacing $eq cell `$eq$mat_vect_mult2.v:67$6' in module `mat_vect_mult2' with inverter.
Replacing $eq cell `$eq$mat_vect_mult2.v:40$40' in module `mat_vect_mult2' with inverter.
Replacing $eq cell `$eq$mat_vect_mult2.v:40$44' (1) in module `\mat_vect_mult2' with constant driver `$eq$mat_vect_mult2.v:40$44_Y = \slice'.
Replacing $eq cell `$procmux$74_CMP0' in module `mat_vect_mult2' with inverter.
Replacing $eq cell `$eq$mat_vect_mult2.v:116$30' (1) in module `\mat_vect_mult2' with constant driver `$eq$mat_vect_mult2.v:116$30_Y = \count'.
Replacing $ne cell `$ne$mat_vect_mult2.v:127$34' in module `mat_vect_mult2' with inverter.
Optimizing away select inverter for $mux cell `$ternary$mat_vect_mult2.v:67$8' in module `mat_vect_mult2'.
Optimizing away select inverter for $mux cell `$procmux$49' in module `mat_vect_mult2'.

2.6.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..
  removing buffer cell `$extend$mat_vect_mult2.v:67$7': $extend$mat_vect_mult2.v:67$7_Y = \s_axis_tready
  removing unused `$not' cell `$eq$mat_vect_mult2.v:67$6'.
  removing unused `$not' cell `$ne$mat_vect_mult2.v:127$34'.
  removing unused `$mux' cell `$procmux$78'.
  removing unused `$mux' cell `$procmux$81'.
  removing unused `$adff' cell `$procdff$99'.
  removing unused `$adff' cell `$procdff$100'.

2.6.4. Executing CHECK pass (checking for obvious problems).
checking module mat_vect_mult2..
found and reported 0 problems.

2.6.5. Executing OPT pass (performing simple optimizations).

2.6.5.1. Executing OPT_EXPR pass (perform const folding).

2.6.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mat_vect_mult2'.
  Cell `$logic_and$mat_vect_mult2.v:116$29' is identical to cell `$logic_and$mat_vect_mult2.v:103$27'.
    Redirecting output \Y: $logic_and$mat_vect_mult2.v:116$29_Y = $logic_and$mat_vect_mult2.v:103$27_Y
    Removing $logic_and cell `$logic_and$mat_vect_mult2.v:116$29' from module `\mat_vect_mult2'.
  Cell `$logic_and$mat_vect_mult2.v:126$33' is identical to cell `$logic_and$mat_vect_mult2.v:103$27'.
    Redirecting output \Y: $logic_and$mat_vect_mult2.v:126$33_Y = $logic_and$mat_vect_mult2.v:103$27_Y
    Removing $logic_and cell `$logic_and$mat_vect_mult2.v:126$33' from module `\mat_vect_mult2'.
  Cell `$logic_and$mat_vect_mult2.v:40$43' is identical to cell `$logic_and$mat_vect_mult2.v:40$39'.
    Redirecting output \Y: $logic_and$mat_vect_mult2.v:40$43_Y = $logic_and$mat_vect_mult2.v:40$39_Y
    Removing $logic_and cell `$logic_and$mat_vect_mult2.v:40$43' from module `\mat_vect_mult2'.
  Cell `$logic_and$mat_vect_mult2.v:89$22' is identical to cell `$logic_and$mat_vect_mult2.v:75$14'.
    Redirecting output \Y: $logic_and$mat_vect_mult2.v:89$22_Y = $logic_and$mat_vect_mult2.v:75$14_Y
    Removing $logic_and cell `$logic_and$mat_vect_mult2.v:89$22' from module `\mat_vect_mult2'.
  Cell `$logic_and$mat_vect_mult2.v:91$24' is identical to cell `$logic_and$mat_vect_mult2.v:75$14'.
    Redirecting output \Y: $logic_and$mat_vect_mult2.v:91$24_Y = $logic_and$mat_vect_mult2.v:75$14_Y
    Removing $logic_and cell `$logic_and$mat_vect_mult2.v:91$24' from module `\mat_vect_mult2'.
  Cell `$procmux$74_CMP0' is identical to cell `$eq$mat_vect_mult2.v:40$40'.
    Redirecting output \Y: $procmux$74_CMP = $eq$mat_vect_mult2.v:40$40_Y
    Removing $not cell `$procmux$74_CMP0' from module `\mat_vect_mult2'.
Removed a total of 6 cells.

2.6.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mat_vect_mult2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$51 (pure)
      Replacing known input bits on port B of cell $procmux$49: \count -> 1'1
    Root of a mux tree: $procmux$57 (pure)
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$69 (pure)
    Root of a mux tree: $procmux$75 (pure)
    Root of a mux tree: $procmux$87 (pure)
    Root of a mux tree: $procmux$90 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:40$42 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:40$46 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:67$8 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.6.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mat_vect_mult2.
Performed a total of 0 changes.

2.6.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mat_vect_mult2'.
Removed a total of 0 cells.

2.6.5.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..

2.6.5.8. Executing OPT_EXPR pass (perform const folding).

2.6.5.9. Finished OPT passes. (There is nothing left to do.)

2.6.6. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from mux cell mat_vect_mult2.$ternary$mat_vect_mult2.v:67$8 ($mux).
Removed top 1 bits (of 17) from port Y of cell mat_vect_mult2.$mul$mat_vect_mult2.v:76$18 ($mul).
Removed top 1 bits (of 17) from port B of cell mat_vect_mult2.$add$mat_vect_mult2.v:76$19 ($add).
Removed top 31 bits (of 32) from port B of cell mat_vect_mult2.$add$mat_vect_mult2.v:92$25 ($add).
Removed top 31 bits (of 32) from port Y of cell mat_vect_mult2.$add$mat_vect_mult2.v:92$25 ($add).
Removed top 31 bits (of 32) from port B of cell mat_vect_mult2.$add$mat_vect_mult2.v:127$35 ($add).
Removed top 31 bits (of 32) from port Y of cell mat_vect_mult2.$add$mat_vect_mult2.v:127$35 ($add).
Removed cell mat_vect_mult2.$procmux$75 ($mux).
Removed top 31 bits (of 32) from wire mat_vect_mult2.$add$mat_vect_mult2.v:127$35_Y.
Removed top 31 bits (of 32) from wire mat_vect_mult2.$add$mat_vect_mult2.v:92$25_Y.
Removed top 1 bits (of 17) from wire mat_vect_mult2.$mul$mat_vect_mult2.v:76$18_Y.

2.6.7. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mat_vect_mult2:
  creating $macc model for $add$mat_vect_mult2.v:76$19 ($add).
  creating $macc model for $add$mat_vect_mult2.v:92$25 ($add).
  creating $macc model for $mul$mat_vect_mult2.v:76$18 ($mul).
  creating $macc model for $add$mat_vect_mult2.v:127$35 ($add).
  merging $macc model for $mul$mat_vect_mult2.v:76$18 into $add$mat_vect_mult2.v:76$19.
  creating $alu model for $macc $add$mat_vect_mult2.v:127$35.
  creating $alu model for $macc $add$mat_vect_mult2.v:92$25.
  creating $macc cell for $add$mat_vect_mult2.v:76$19: $auto$alumacc.cc:354:replace_macc$105
  creating $alu cell for $add$mat_vect_mult2.v:92$25: $auto$alumacc.cc:470:replace_alu$106
  creating $alu cell for $add$mat_vect_mult2.v:127$35: $auto$alumacc.cc:470:replace_alu$109
  created 2 $alu and 1 $macc cells.

2.6.8. Executing SHARE pass (SAT-based resource sharing).

2.6.9. Executing OPT pass (performing simple optimizations).

2.6.9.1. Executing OPT_EXPR pass (perform const folding).

2.6.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mat_vect_mult2'.
Removed a total of 0 cells.

2.6.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mat_vect_mult2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57 (pure)
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$69 (pure)
    Root of a mux tree: $procmux$72 (pure)
    Root of a mux tree: $procmux$87 (pure)
    Root of a mux tree: $procmux$90 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:40$42 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:40$46 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:67$8 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.6.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mat_vect_mult2.
Performed a total of 0 changes.

2.6.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mat_vect_mult2'.
Removed a total of 0 cells.

2.6.9.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..
  removing unused `$mul' cell `$mul$mat_vect_mult2.v:76$18'.

2.6.9.8. Executing OPT_EXPR pass (perform const folding).

2.6.9.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mat_vect_mult2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57 (pure)
    Root of a mux tree: $procmux$63 (pure)
    Root of a mux tree: $procmux$69 (pure)
    Root of a mux tree: $procmux$72 (pure)
    Root of a mux tree: $procmux$87 (pure)
    Root of a mux tree: $procmux$90 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:40$42 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:40$46 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:67$8 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.6.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mat_vect_mult2.
Performed a total of 0 changes.

2.6.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mat_vect_mult2'.
Removed a total of 0 cells.

2.6.9.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..

2.6.9.15. Executing OPT_EXPR pass (perform const folding).

2.6.9.16. Finished OPT passes. (There is nothing left to do.)

2.6.10. Executing FSM pass (extract and optimize FSM).

2.6.10.1. Executing FSM_DETECT pass (finding FSMs in design).

2.6.10.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.6.10.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.6.10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..

2.6.10.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.6.10.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.6.10.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.6.10.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.6.11. Executing OPT pass (performing simple optimizations).

2.6.11.1. Executing OPT_EXPR pass (perform const folding).

2.6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mat_vect_mult2'.
Removed a total of 0 cells.

2.6.11.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..

2.6.11.5. Finished fast OPT passes.

2.6.12. Executing MEMORY pass.

2.6.12.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.6.12.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..

2.6.12.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.6.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..

2.6.12.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.6.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..

2.7. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

2.8. Executing TECHMAP pass (map to technology primitives).

2.8.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__XILINX_RAMB36_SDP'.
Generating RTLIL representation for module `\$__XILINX_RAMB18_SDP'.
Generating RTLIL representation for module `\$__XILINX_RAMB36_TDP'.
Generating RTLIL representation for module `\$__XILINX_RAMB18_TDP'.
Successfully finished Verilog frontend.
No more expansions possible.

2.9. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/drams_map.v' to AST representation.
Generating RTLIL representation for module `\$__XILINX_RAM64X1D'.
Generating RTLIL representation for module `\$__XILINX_RAM128X1D'.
Successfully finished Verilog frontend.
No more expansions possible.

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimized away 1 select inputs of $pmux cell `$procmux$72' in module `mat_vect_mult2'.
Replacing $mux cell `$procmux$90' in module `mat_vect_mult2' with inverter.
Replacing $mux cell `$procmux$49' in module `mat_vect_mult2' with or-gate.
Replacing $mux cell `$procmux$54' in module `mat_vect_mult2' with or-gate.
Replacing $mux cell `$procmux$63' in module `mat_vect_mult2' with or-gate.

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mat_vect_mult2'.
Removed a total of 0 cells.

2.11.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..

2.11.5. Finished fast OPT passes.

2.12. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.13. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

2.14. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Transforming FF to FF+Enable cells in module mat_vect_mult2:

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mat_vect_mult2'.
Removed a total of 0 cells.

2.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mat_vect_mult2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
    Root of a mux tree: $procmux$51 (pure)
    Root of a mux tree: $procmux$57 (pure)
    Root of a mux tree: $procmux$60 (pure)
    Root of a mux tree: $procmux$69 (pure)
    Root of a mux tree: $procmux$72 (pure)
    Root of a mux tree: $procmux$87 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:40$42 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:40$46 (pure)
    Root of a mux tree: $ternary$mat_vect_mult2.v:67$8 (pure)
  Analyzing evaluation results.
Removed 0 multiplexer ports.

2.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mat_vect_mult2.
Performed a total of 0 changes.

2.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mat_vect_mult2'.
Removed a total of 0 cells.

2.15.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..

2.15.8. Executing OPT_EXPR pass (perform const folding).

2.15.9. Finished OPT passes. (There is nothing left to do.)

2.16. Executing TECHMAP pass (map to technology primitives).

2.16.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.16.2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_xilinx_lcu'.
Generating RTLIL representation for module `\_80_xilinx_alu'.
Successfully finished Verilog frontend.
Mapping mat_vect_mult2.$not$mat_vect_mult2.v:60$3 ($not) with simplemap.
Mapping mat_vect_mult2.$logic_and$mat_vect_mult2.v:60$4 ($logic_and) with simplemap.
Mapping mat_vect_mult2.$logic_or$mat_vect_mult2.v:60$5 ($logic_or) with simplemap.
Mapping mat_vect_mult2.$ternary$mat_vect_mult2.v:67$8 ($mux) with simplemap.
Mapping mat_vect_mult2.$logic_and$mat_vect_mult2.v:75$14 ($logic_and) with simplemap.
Mapping mat_vect_mult2.$logic_and$mat_vect_mult2.v:77$20 ($logic_and) with simplemap.
Mapping mat_vect_mult2.$auto$alumacc.cc:354:replace_macc$105 ($macc) with maccmap.
  add \m_axis_tdata (17 bits, unsigned)
  add \s_axis_tdata * $3$mem2reg_rd$\inp_vect_lat$mat_vect_mult2.v:76$1_DATA[7:0]$17 (8x8 bits, unsigned)
Mapping mat_vect_mult2.$logic_and$mat_vect_mult2.v:89$23 ($logic_and) with simplemap.
Mapping mat_vect_mult2.$logic_and$mat_vect_mult2.v:103$27 ($logic_and) with simplemap.
Mapping mat_vect_mult2.$logic_and$mat_vect_mult2.v:116$31 ($logic_and) with simplemap.
Mapping mat_vect_mult2.$logic_and$mat_vect_mult2.v:40$39 ($logic_and) with simplemap.
Mapping mat_vect_mult2.$eq$mat_vect_mult2.v:40$40 ($not) with simplemap.
Mapping mat_vect_mult2.$logic_and$mat_vect_mult2.v:40$41 ($logic_and) with simplemap.
Mapping mat_vect_mult2.$ternary$mat_vect_mult2.v:40$42 ($mux) with simplemap.

2.16.3. Executing AST frontend in derive mode using pre-parsed AST for module `\_80_xilinx_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 1
Parameter \Y_WIDTH = 1
Generating RTLIL representation for module `$paramod\_80_xilinx_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1'.
Not using module `$paramod\_80_xilinx_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1' from techmap as it contains a _TECHMAP_FAIL_ marker wire with non-zero value 1'1.

2.16.4. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 1
Parameter \B_WIDTH = 1
Parameter \Y_WIDTH = 1
Generating RTLIL representation for module `$paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1'.

2.16.5. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$auto$alumacc.cc:470:replace_alu$109 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1.
Mapping mat_vect_mult2.$logic_and$mat_vect_mult2.v:40$45 ($logic_and) with simplemap.
Mapping mat_vect_mult2.$ternary$mat_vect_mult2.v:40$46 ($mux) with simplemap.
Mapping mat_vect_mult2.$procmux$49 ($or) with simplemap.
Mapping mat_vect_mult2.$procmux$51 ($mux) with simplemap.
Mapping mat_vect_mult2.$procmux$54 ($or) with simplemap.
Mapping mat_vect_mult2.$procmux$57 ($mux) with simplemap.
Mapping mat_vect_mult2.$procmux$60 ($mux) with simplemap.
Mapping mat_vect_mult2.$procmux$63 ($or) with simplemap.
Mapping mat_vect_mult2.$procmux$66 ($mux) with simplemap.
Mapping mat_vect_mult2.$procmux$69 ($mux) with simplemap.
Mapping mat_vect_mult2.$procmux$72 ($mux) with simplemap.
Mapping mat_vect_mult2.$procmux$84 ($mux) with simplemap.
Mapping mat_vect_mult2.$procmux$87 ($mux) with simplemap.
Mapping mat_vect_mult2.$auto$alumacc.cc:470:replace_alu$106 using $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1.
Mapping mat_vect_mult2.$procmux$90 ($not) with simplemap.
Mapping mat_vect_mult2.$procdff$92 ($adff) with simplemap.
Mapping mat_vect_mult2.$procdff$93 ($adff) with simplemap.
Mapping mat_vect_mult2.$procdff$94 ($adff) with simplemap.
Mapping mat_vect_mult2.$procdff$95 ($adff) with simplemap.
Mapping mat_vect_mult2.$procdff$96 ($adff) with simplemap.
Mapping mat_vect_mult2.$procdff$97 ($adff) with simplemap.
Mapping mat_vect_mult2.$procdff$98 ($adff) with simplemap.
Mapping mat_vect_mult2.$procdff$101 ($adff) with simplemap.
Mapping mat_vect_mult2.$auto$maccmap.cc:82:add$174 ($and) with simplemap.
Mapping mat_vect_mult2.$auto$maccmap.cc:82:add$176 ($and) with simplemap.
Mapping mat_vect_mult2.$auto$maccmap.cc:82:add$178 ($and) with simplemap.
Mapping mat_vect_mult2.$auto$maccmap.cc:82:add$180 ($and) with simplemap.
Mapping mat_vect_mult2.$auto$maccmap.cc:82:add$182 ($and) with simplemap.
Mapping mat_vect_mult2.$auto$maccmap.cc:82:add$184 ($and) with simplemap.
Mapping mat_vect_mult2.$auto$maccmap.cc:82:add$186 ($and) with simplemap.
Mapping mat_vect_mult2.$auto$maccmap.cc:82:add$188 ($and) with simplemap.

2.16.6. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_fa'.
Parameter \WIDTH = 17
Generating RTLIL representation for module `$paramod\_90_fa\WIDTH=17'.

2.16.7. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$auto$maccmap.cc:114:fulladd$192 using $paramod\_90_fa\WIDTH=17.
Mapping mat_vect_mult2.$auto$maccmap.cc:114:fulladd$195 using $paramod\_90_fa\WIDTH=17.
Mapping mat_vect_mult2.$auto$maccmap.cc:114:fulladd$198 using $paramod\_90_fa\WIDTH=17.
Mapping mat_vect_mult2.$auto$maccmap.cc:114:fulladd$201 using $paramod\_90_fa\WIDTH=17.
Mapping mat_vect_mult2.$auto$maccmap.cc:114:fulladd$204 using $paramod\_90_fa\WIDTH=17.
Mapping mat_vect_mult2.$auto$maccmap.cc:114:fulladd$207 using $paramod\_90_fa\WIDTH=17.
Mapping mat_vect_mult2.$auto$maccmap.cc:114:fulladd$210 using $paramod\_90_fa\WIDTH=17.

2.16.8. Executing AST frontend in derive mode using pre-parsed AST for module `\_80_xilinx_alu'.
Parameter \A_SIGNED = 0
Parameter \B_SIGNED = 0
Parameter \A_WIDTH = 17
Parameter \B_WIDTH = 17
Parameter \Y_WIDTH = 17
Generating RTLIL representation for module `$paramod\_80_xilinx_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=17\Y_WIDTH=17'.

2.16.9. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$auto$maccmap.cc:240:synth$211 using $paramod\_80_xilinx_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=17\Y_WIDTH=17.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$109.$xor$/usr/local/bin/../share/yosys/techmap.v:263$239 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$109.$xor$/usr/local/bin/../share/yosys/techmap.v:262$238 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$109.$and$/usr/local/bin/../share/yosys/techmap.v:260$237 ($and) with simplemap.

2.16.10. Executing AST frontend in derive mode using pre-parsed AST for module `\_80_xilinx_lcu'.
Parameter \WIDTH = 1
Generating RTLIL representation for module `$paramod\_80_xilinx_lcu\WIDTH=1'.
Not using module `$paramod\_80_xilinx_lcu\WIDTH=1' from techmap as it contains a _TECHMAP_FAIL_ marker wire with non-zero value 1'1.

2.16.11. Executing AST frontend in derive mode using pre-parsed AST for module `\_90_lcu'.
Parameter \WIDTH = 1
Generating RTLIL representation for module `$paramod\_90_lcu\WIDTH=1'.

2.16.12. Executing PROC pass (convert processes to netlists).

2.16.12.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.16.12.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.16.12.3. Executing PROC_INIT pass (extract init attributes).

2.16.12.4. Executing PROC_ARST pass (detect async resets in processes).

2.16.12.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\_90_lcu\WIDTH=1.$proc$/usr/local/bin/../share/yosys/techmap.v:207$491'.
     1/2: $0\g[0:0]
     2/2: $0\p[0:0]

2.16.12.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\_90_lcu\WIDTH=1.\g' from process `$paramod\_90_lcu\WIDTH=1.$proc$/usr/local/bin/../share/yosys/techmap.v:207$491'.
No latch inferred for signal `$paramod\_90_lcu\WIDTH=1.\p' from process `$paramod\_90_lcu\WIDTH=1.$proc$/usr/local/bin/../share/yosys/techmap.v:207$491'.

2.16.12.7. Executing PROC_DFF pass (convert process syncs to FFs).

2.16.12.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\_90_lcu\WIDTH=1.$proc$/usr/local/bin/../share/yosys/techmap.v:207$491'.
Cleaned up 0 empty switches.

2.16.13. Executing OPT pass (performing simple optimizations).

2.16.13.1. Executing OPT_EXPR pass (perform const folding).

2.16.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\_90_lcu\WIDTH=1'.
Removed a total of 0 cells.

2.16.13.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.16.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\_90_lcu\WIDTH=1..
  removing unused non-port wire \j.
  removing unused non-port wire \i.
  removed 2 unused temporary wires.

2.16.13.5. Finished fast OPT passes.

2.16.14. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$auto$alumacc.cc:470:replace_alu$109.lcu using $paramod\_90_lcu\WIDTH=1.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$109.$ternary$/usr/local/bin/../share/yosys/techmap.v:258$236 ($mux) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$109.$not$/usr/local/bin/../share/yosys/techmap.v:258$235 ($not) with simplemap.
Mapping mat_vect_mult2.$auto$alumacc.cc:470:replace_alu$109.B_conv ($pos) with simplemap.
Mapping mat_vect_mult2.$auto$alumacc.cc:470:replace_alu$109.A_conv ($pos) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$106.$xor$/usr/local/bin/../share/yosys/techmap.v:263$239 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$106.$xor$/usr/local/bin/../share/yosys/techmap.v:262$238 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$106.$and$/usr/local/bin/../share/yosys/techmap.v:260$237 ($and) with simplemap.
Mapping mat_vect_mult2.$auto$alumacc.cc:470:replace_alu$106.lcu using $paramod\_90_lcu\WIDTH=1.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$106.$ternary$/usr/local/bin/../share/yosys/techmap.v:258$236 ($mux) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$106.$not$/usr/local/bin/../share/yosys/techmap.v:258$235 ($not) with simplemap.
Mapping mat_vect_mult2.$auto$alumacc.cc:470:replace_alu$106.B_conv ($pos) with simplemap.
Mapping mat_vect_mult2.$auto$alumacc.cc:470:replace_alu$106.A_conv ($pos) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$109.lcu.$and$/usr/local/bin/../share/yosys/techmap.v:212$492 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$109.lcu.$or$/usr/local/bin/../share/yosys/techmap.v:212$493 ($or) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$106.lcu.$and$/usr/local/bin/../share/yosys/techmap.v:212$492 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$alumacc.cc:470:replace_alu$106.lcu.$or$/usr/local/bin/../share/yosys/techmap.v:212$493 ($or) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$192.$or$/usr/local/bin/../share/yosys/techmap.v:190$478 ($or) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$476 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$475 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478 ($or) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478 ($or) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$201.$or$/usr/local/bin/../share/yosys/techmap.v:190$478 ($or) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$476 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$475 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478 ($or) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$207.$or$/usr/local/bin/../share/yosys/techmap.v:190$478 ($or) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$476 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$475 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478 ($or) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$476 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$475 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:240:synth$211.$and$/usr/local/bin/../share/yosys/xilinx/arith_map.v:72$484 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:240:synth$211.$not$/usr/local/bin/../share/yosys/xilinx/arith_map.v:72$483 ($not) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:240:synth$211.$and$/usr/local/bin/../share/yosys/xilinx/arith_map.v:70$482 ($and) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:240:synth$211.$xor$/usr/local/bin/../share/yosys/xilinx/arith_map.v:69$481 ($xor) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480 ($mux) with simplemap.
Mapping mat_vect_mult2.$techmap$auto$maccmap.cc:240:synth$211.$not$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$479 ($not) with simplemap.
Mapping mat_vect_mult2.$auto$maccmap.cc:240:synth$211.B_conv ($pos) with simplemap.
Mapping mat_vect_mult2.$auto$maccmap.cc:240:synth$211.A_conv ($pos) with simplemap.
No more expansions possible.

2.17. Executing OPT pass (performing simple optimizations).

2.17.1. Executing OPT_EXPR pass (perform const folding).
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$500' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$106.$ternary$/usr/local/bin/../share/yosys/techmap.v:258$236_Y = \slice'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$496' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$106.$xor$/usr/local/bin/../share/yosys/techmap.v:263$239_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$106.$xor$/usr/local/bin/../share/yosys/techmap.v:262$238_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$499' (1?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$106.$and$/usr/local/bin/../share/yosys/techmap.v:260$237_Y = \slice'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$504' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$106.lcu.$and$/usr/local/bin/../share/yosys/techmap.v:212$492_Y = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$505' (?0) in module `\mat_vect_mult2' with constant driver `$auto$alumacc.cc:484:replace_alu$108 = \slice'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$497' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$106.$xor$/usr/local/bin/../share/yosys/techmap.v:263$239_Y [1] = \slice'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$494' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$109.$ternary$/usr/local/bin/../share/yosys/techmap.v:258$236_Y = \count'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$502' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$109.lcu.$and$/usr/local/bin/../share/yosys/techmap.v:212$492_Y = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$488' (1?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$109.$and$/usr/local/bin/../share/yosys/techmap.v:260$237_Y = \count'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$503' (?0) in module `\mat_vect_mult2' with constant driver `$auto$alumacc.cc:484:replace_alu$111 = \count'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$355' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$177 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$540' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$506' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [0] = $techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$346' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$175 [8] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$582' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [8] = \m_axis_tdata [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$565' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [8] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$514' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [8]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$364' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$177 [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$347' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$175 [9] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$583' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [9] = \m_axis_tdata [9]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$549' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$566' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [9] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$515' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [9] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$365' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$177 [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$348' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$175 [10] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$584' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [10] = \m_axis_tdata [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$550' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$567' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$516' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$366' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$177 [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$349' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$175 [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$585' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [11] = \m_axis_tdata [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$551' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$568' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$517' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$367' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$177 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$350' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$175 [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$586' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [12] = \m_axis_tdata [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$552' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$569' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$518' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$368' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$177 [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$351' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$175 [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$587' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [13] = \m_axis_tdata [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$553' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$570' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$519' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$369' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$177 [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$352' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$175 [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$588' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [14] = \m_axis_tdata [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$554' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$571' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$520' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$370' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$177 [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$353' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$175 [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$589' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [15] = \m_axis_tdata [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$555' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$572' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$521' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$371' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$177 [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$354' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$175 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$590' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [16] = \m_axis_tdata [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$556' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$573' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [16] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$522' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$523' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [0] = $techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$532' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [9] = \m_axis_tdata [9]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$533' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [10] = \m_axis_tdata [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$485' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$109.$xor$/usr/local/bin/../share/yosys/techmap.v:263$239_Y [0] = $techmap$auto$alumacc.cc:470:replace_alu$109.$xor$/usr/local/bin/../share/yosys/techmap.v:262$238_Y'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$372' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$179 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$373' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$179 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$382' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$179 [10] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$383' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$179 [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$384' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$179 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$385' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$179 [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$386' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$179 [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$387' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$179 [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$388' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$179 [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$389' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$181 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$390' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$181 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$391' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$181 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$400' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$181 [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$401' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$181 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$402' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$181 [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$403' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$181 [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$404' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$181 [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$405' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$181 [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$406' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$183 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$407' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$183 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$408' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$183 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$409' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$183 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$418' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$183 [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$419' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$183 [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$420' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$183 [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$421' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$183 [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$422' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$183 [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$423' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$185 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$424' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$185 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$425' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$185 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$426' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$185 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$427' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$185 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$436' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$185 [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$437' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$185 [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$438' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$185 [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$439' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$185 [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$440' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$187 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$441' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$187 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$442' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$187 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$443' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$187 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$444' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$187 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$445' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$187 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$454' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$187 [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$455' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$187 [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$456' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$187 [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$457' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$189 [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$458' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$189 [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$459' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$189 [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$460' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$189 [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$461' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$189 [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$462' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$189 [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$463' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$189 [6] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$472' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$189 [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$473' (const_and) in module `\mat_vect_mult2' with constant driver `$auto$rtlil.cc:1629:And$189 [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$486' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$alumacc.cc:470:replace_alu$109.$xor$/usr/local/bin/../share/yosys/techmap.v:263$239_Y [1] = \count'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$534' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [11] = \m_axis_tdata [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$535' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [12] = \m_axis_tdata [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$536' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [13] = \m_axis_tdata [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$537' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [14] = \m_axis_tdata [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$538' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [15] = \m_axis_tdata [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$539' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [16] = \m_axis_tdata [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$659' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$625' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$642' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$591' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$660' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$626' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$643' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$592' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$661' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [2] = $auto$rtlil.cc:1629:And$179 [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$627' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$644' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$593' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$628' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$594' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$669' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [10] = $auto$rtlil.cc:1629:And$181 [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$652' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$601' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$670' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$636' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [11] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$653' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$602' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [11] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$671' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$637' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$654' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$603' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$672' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$638' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$655' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$604' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$673' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$639' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$656' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$605' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$674' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$640' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$657' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$606' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$675' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$641' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$658' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [16] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$607' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$608' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$609' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$610' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [2] = $auto$rtlil.cc:1629:And$179 [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$611' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$619' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [11] = $auto$rtlil.cc:1629:And$183 [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$620' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$621' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$622' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$623' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$624' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$195.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$744' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$710' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$727' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$676' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$745' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$711' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$728' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$677' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$746' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$712' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$729' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$678' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$747' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$713' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$730' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$679' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$748' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$714' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$731' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$680' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$749' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [5] = $auto$rtlil.cc:1629:And$185 [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$715' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$732' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$681' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [5] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$716' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$682' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$757' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [13] = $auto$rtlil.cc:1629:And$187 [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$740' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$689' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$758' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$724' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$741' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$690' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$759' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$725' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$742' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$691' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$760' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$726' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$743' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [16] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$692' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$693' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$694' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$695' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$696' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$697' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [4] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$698' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [5] = $auto$rtlil.cc:1629:And$185 [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$699' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$707' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [14] = $auto$rtlil.cc:1629:And$189 [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$708' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$709' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$829' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0] = $techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$795' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$812' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$761' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$796' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$762' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$839' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [10] = \m_axis_tdata [10]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$822' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [10] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$771' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [10]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$840' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [11] = \m_axis_tdata [11]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$823' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [11] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$772' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [11]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$841' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [12] = \m_axis_tdata [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$807' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [12] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$824' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$773' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [12] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$842' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [13] = \m_axis_tdata [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$808' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [13] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$825' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$774' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [13] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$843' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [14] = \m_axis_tdata [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$809' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [14] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$826' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$775' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [14] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$844' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [15] = \m_axis_tdata [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$810' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$827' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$776' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$845' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [16] = \m_axis_tdata [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$811' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$828' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [16] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$777' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$778' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [0] = $techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$779' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$790' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [12] = \m_axis_tdata [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$791' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [13] = \m_axis_tdata [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$792' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [14] = \m_axis_tdata [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$793' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [15] = \m_axis_tdata [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$794' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [16] = \m_axis_tdata [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$914' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$880' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$897' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$846' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$915' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$881' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$898' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$847' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$916' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$882' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$899' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$848' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$917' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$883' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$900' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$849' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$918' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$884' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$901' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$850' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [4] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$885' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$851' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [5]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$886' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [6] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$852' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$926' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [12]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$909' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [12] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$858' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [12]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$927' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$198.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$910' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$859' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$928' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [14] = $auto$rtlil.cc:1629:And$189 [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$911' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$860' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$929' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$895' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$912' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$861' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$930' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$896' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$913' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [16] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$862' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$863' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$864' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$865' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [2] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$866' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [3] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$867' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$195.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$868' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$869' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [6]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$878' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$879' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$204.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$999' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0] = $techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$965' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$982' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$931' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1000' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$966' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$983' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$932' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$967' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$933' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$968' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$934' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1012' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [13] = \m_axis_tdata [13]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$995' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [13] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$944' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [13]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1013' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [14] = \m_axis_tdata [14]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$996' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [14] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$945' (0?) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [14]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1014' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [15] = \m_axis_tdata [15]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$980' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [15] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$997' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [15] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$946' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [15] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1015' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [16] = \m_axis_tdata [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$981' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$998' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [16] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$947' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$948' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [0] = $techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$949' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$950' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$951' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$963' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [15] = \m_axis_tdata [15]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$964' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [16] = \m_axis_tdata [16]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1084' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0] = $techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1050' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1067' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [0] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1016' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [0] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1085' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1051' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1068' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [1] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1017' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [1] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1086' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1052' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1069' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [2] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1018' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1053' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [3] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1019' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1054' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [4] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1020' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [4]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1055' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [5] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1021' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1100' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [16] = \m_axis_tdata [16]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1066' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$476_Y [16] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1083' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [16] = 1'0'.
Replacing $_OR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1032' (00) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [16] = 1'0'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1033' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [0] = $techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1034' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1035' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [2]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1036' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [3]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1037' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [4]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1038' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [5]'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1049' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:190$477_Y [16] = \m_axis_tdata [16]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1186' (0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$not$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$479_Y [0] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1169' (010) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [0] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1135' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$and$/usr/local/bin/../share/yosys/xilinx/arith_map.v:70$482_Y [0] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1118' (0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$not$/usr/local/bin/../share/yosys/xilinx/arith_map.v:72$483_Y [0] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1152' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$xor$/usr/local/bin/../share/yosys/xilinx/arith_map.v:69$481_Y [0] = $techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1101' (?1) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$and$/usr/local/bin/../share/yosys/xilinx/arith_map.v:72$484_Y [0] = $techmap$auto$maccmap.cc:114:fulladd$192.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [0]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1187' (0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$not$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$479_Y [1] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1170' (010) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [1] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1136' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$and$/usr/local/bin/../share/yosys/xilinx/arith_map.v:70$482_Y [1] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1119' (0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$not$/usr/local/bin/../share/yosys/xilinx/arith_map.v:72$483_Y [1] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1153' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$xor$/usr/local/bin/../share/yosys/xilinx/arith_map.v:69$481_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1102' (?1) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$and$/usr/local/bin/../share/yosys/xilinx/arith_map.v:72$484_Y [1] = $techmap$auto$maccmap.cc:114:fulladd$201.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [1]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1188' (0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$not$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$479_Y [2] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1171' (010) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [2] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1137' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$and$/usr/local/bin/../share/yosys/xilinx/arith_map.v:70$482_Y [2] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1120' (0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$not$/usr/local/bin/../share/yosys/xilinx/arith_map.v:72$483_Y [2] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1154' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$xor$/usr/local/bin/../share/yosys/xilinx/arith_map.v:69$481_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [2]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1103' (?1) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$and$/usr/local/bin/../share/yosys/xilinx/arith_map.v:72$484_Y [2] = $techmap$auto$maccmap.cc:114:fulladd$207.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [2]'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1189' (0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$not$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$479_Y [3] = 1'1'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1172' (010) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [3] = 1'0'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1138' (const_and) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$and$/usr/local/bin/../share/yosys/xilinx/arith_map.v:70$482_Y [3] = 1'0'.
Replacing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$1121' (0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$not$/usr/local/bin/../share/yosys/xilinx/arith_map.v:72$483_Y [3] = 1'1'.
Replacing $_XOR_ cell `$auto$simplemap.cc:85:simplemap_bitop$1155' (?0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$xor$/usr/local/bin/../share/yosys/xilinx/arith_map.v:69$481_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [3]'.
Replacing $_AND_ cell `$auto$simplemap.cc:85:simplemap_bitop$1104' (?1) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$and$/usr/local/bin/../share/yosys/xilinx/arith_map.v:72$484_Y [3] = $techmap$auto$maccmap.cc:114:fulladd$210.$xor$/usr/local/bin/../share/yosys/techmap.v:189$474_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1173' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [4] = $techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [3]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1174' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [5] = $techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [4]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1175' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [6] = $techmap$auto$maccmap.cc:114:fulladd$210.$and$/usr/local/bin/../share/yosys/techmap.v:189$475_Y [5]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1176' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [7] = $techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [6]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1177' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [8] = $techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [7]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1178' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [9] = $techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [8]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1179' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [10] = $techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [9]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1180' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [11] = $techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [10]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1181' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [12] = $techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [11]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1182' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [13] = $techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [12]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1183' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [14] = $techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [13]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1184' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [15] = $techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [14]'.
Replacing $_MUX_ cell `$auto$simplemap.cc:277:simplemap_mux$1185' (??0) in module `\mat_vect_mult2' with constant driver `$techmap$auto$maccmap.cc:240:synth$211.$ternary$/usr/local/bin/../share/yosys/xilinx/arith_map.v:67$480_Y [16] = $techmap$auto$maccmap.cc:114:fulladd$210.$or$/usr/local/bin/../share/yosys/techmap.v:190$478_Y [15]'.

2.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mat_vect_mult2'.
  Cell `$auto$simplemap.cc:37:simplemap_not$219' is identical to cell `$auto$simplemap.cc:37:simplemap_not$501'.
    Redirecting output \Y: $eq$mat_vect_mult2.v:40$40_Y = $techmap$auto$alumacc.cc:470:replace_alu$106.$not$/usr/local/bin/../share/yosys/techmap.v:258$235_Y
    Removing $_NOT_ cell `$auto$simplemap.cc:37:simplemap_not$219' from module `\mat_vect_mult2'.
Removed a total of 1 cells.

2.17.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mat_vect_mult2..
  removing unused `\MUXCY' cell `$auto$maccmap.cc:240:synth$211.slice[16].muxcy'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$495'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1190'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1191'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1192'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1193'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1194'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1195'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1196'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1197'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1198'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1199'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1200'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1201'.
  removing unused `$_NOT_' cell `$auto$simplemap.cc:37:simplemap_not$1202'.

2.17.5. Finished fast OPT passes.

2.18. Executing ABC pass (technology mapping using ABC).

2.18.1. Extracting gate netlist of module `\mat_vect_mult2' to `<abc-temp-dir>/input.blif'..
Extracted 495 gates and 572 wires to a netlist network with 75 inputs and 68 outputs.

2.18.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + dc2 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime -o 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.18.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      344
ABC RESULTS:        internal signals:      429
ABC RESULTS:           input signals:       75
ABC RESULTS:          output signals:       68
Removing temp directory.
Removed 0 unused cells and 165 unused wires.

2.19. Executing TECHMAP pass (map to technology primitives).

2.19.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.19.2. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 2
Parameter \LUT = 4'1000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=2\LUT=4'1000'.

2.19.3. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1225 using $paramod\$lut\WIDTH=2\LUT=4'1000.

2.19.4. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 2
Parameter \LUT = 4'1110
Generating RTLIL representation for module `$paramod\$lut\WIDTH=2\LUT=4'1110'.

2.19.5. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1372 using $paramod\$lut\WIDTH=2\LUT=4'1110.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$318 using \$_DFF_PP0_.

2.19.6. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 2
Parameter \LUT = 4'0100
Generating RTLIL representation for module `$paramod\$lut\WIDTH=2\LUT=4'0100'.

2.19.7. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1356 using $paramod\$lut\WIDTH=2\LUT=4'0100.

2.19.8. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 2
Parameter \LUT = 4'0001
Generating RTLIL representation for module `$paramod\$lut\WIDTH=2\LUT=4'0001'.

2.19.9. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1355 using $paramod\$lut\WIDTH=2\LUT=4'0001.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$337 using \$_DFF_PP0_.

2.19.10. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0011111101000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0011111101000000'.

2.19.11. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1227 using $paramod\$lut\WIDTH=4\LUT=16'0011111101000000.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$319 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1224 using $paramod\$lut\WIDTH=2\LUT=4'1110.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$316 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1204 using $paramod\$lut\WIDTH=2\LUT=4'0100.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1207 using $paramod\$lut\WIDTH=2\LUT=4'1000.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1216 using $paramod\$lut\WIDTH=2\LUT=4'1000.

2.19.12. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'11001010
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'11001010'.

2.19.13. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1221 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$305 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1220 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$304 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1215 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$300 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1219 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$303 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1217 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$301 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1218 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$302 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1222 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$306 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1223 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$307 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1206 using $paramod\$lut\WIDTH=2\LUT=4'0100.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1205 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$308 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1208 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$309 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1209 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$310 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1210 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$311 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1211 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$312 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1212 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$313 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1213 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$314 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1214 using $paramod\$lut\WIDTH=3\LUT=8'11001010.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$315 using \$_DFF_PP0_.

2.19.14. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0000000011111000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0000000011111000'.

2.19.15. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1226 using $paramod\$lut\WIDTH=4\LUT=16'0000000011111000.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$317 using \$_DFF_PP0_.

2.19.16. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'1010101000111111001111110011111110101010000000000000000000000000
Generating RTLIL representation for module `$paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut'.

2.19.17. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1228 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$320 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1229 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$321 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1230 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$322 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1231 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$323 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1232 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$324 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1233 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$325 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1234 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$326 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1235 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$327 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1236 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$328 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1237 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$329 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1238 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$330 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1239 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$331 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1240 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$332 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1241 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$333 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1242 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$334 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1243 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$335 using \$_DFF_PP0_.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1244 using $paramod$2dcc3e71e1aec367363a19b556ca3bed81c7d77e\$lut.
Mapping mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$336 using \$_DFF_PP0_.

2.19.18. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00110011010101010011001100110011001100110011001100110011001100110000111101010101000011110000111100001111000011110000111100001111
Generating RTLIL representation for module `$paramod$a93c89bcd1cb0787b9f5f3019bf6ed31844fccd0\$lut'.

2.19.19. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1248 using $paramod$a93c89bcd1cb0787b9f5f3019bf6ed31844fccd0\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1249 using $paramod$a93c89bcd1cb0787b9f5f3019bf6ed31844fccd0\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1251 using $paramod$a93c89bcd1cb0787b9f5f3019bf6ed31844fccd0\$lut.

2.19.20. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 8
Parameter \LUT = 256'1110000110110100101101000001111010110100101101000100101110110100111011101011101100010001010001001011101110111011101110111011101100011110010010110100101111100001010010110100101110110100010010110001000101000100111011101011101101000100010001000100010001000100
Generating RTLIL representation for module `$paramod$64d4c71e91e040682434000353f7be63dbd66beb\$lut'.

2.19.21. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1250 using $paramod$64d4c71e91e040682434000353f7be63dbd66beb\$lut.

2.19.22. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 8
Parameter \LUT = 256'1010101010101111101010100000101011111111111111111111111111111111100011100010001011101110100011101100111100111111111111111111111111111111000010101111111110101111111111111111111111111111111111110010101110001000101110110010101100111111110011111111111111111111
Generating RTLIL representation for module `$paramod$8939cb99459255f89bf8d357b4c979242339b3bf\$lut'.

2.19.23. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1252 using $paramod$8939cb99459255f89bf8d357b4c979242339b3bf\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1254 using $paramod$a93c89bcd1cb0787b9f5f3019bf6ed31844fccd0\$lut.

2.19.24. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0110001101010000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0110001101010000'.

2.19.25. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1253 using $paramod\$lut\WIDTH=4\LUT=16'0110001101010000.

2.19.26. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'0001010001000001000000000000000000000000000000000000000000000000
Generating RTLIL representation for module `$paramod$0ea2acca083dd41777a57b5fbb7a9faf3923ce43\$lut'.

2.19.27. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1247 using $paramod$0ea2acca083dd41777a57b5fbb7a9faf3923ce43\$lut.

2.19.28. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'11111100100000011111001110001110111100000111100011111111011101110000001101111110000011000111000100001111100001110000000010001000
Generating RTLIL representation for module `$paramod$0aeee6b06ac3ca9c6566f2f23ac81bbee53f8795\$lut'.

2.19.29. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1255 using $paramod$0aeee6b06ac3ca9c6566f2f23ac81bbee53f8795\$lut.

2.19.30. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 5
Parameter \LUT = 1761607680
Generating RTLIL representation for module `$paramod\$lut\WIDTH=5\LUT=1761607680'.

2.19.31. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1246 using $paramod\$lut\WIDTH=5\LUT=1761607680.

2.19.32. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00000000001100000000000011001000000000000000000010100000001000000000000011000000101000000011001000000000000000000000000010000000
Generating RTLIL representation for module `$paramod$ad0745271d4a184ae41d7a9b3cde3762a6214985\$lut'.

2.19.33. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1258 using $paramod$ad0745271d4a184ae41d7a9b3cde3762a6214985\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1261 using $paramod$a93c89bcd1cb0787b9f5f3019bf6ed31844fccd0\$lut.

2.19.34. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'0110100100111100010110100000111101100110001100110101010100000000
Generating RTLIL representation for module `$paramod$6f8985542de0db58f37b55b68a6468bf2c2aa213\$lut'.

2.19.35. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1260 using $paramod$6f8985542de0db58f37b55b68a6468bf2c2aa213\$lut.

2.19.36. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0001000000000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0001000000000000'.

2.19.37. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1257 using $paramod\$lut\WIDTH=4\LUT=16'0001000000000000.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1259 using $paramod$0aeee6b06ac3ca9c6566f2f23ac81bbee53f8795\$lut.

2.19.38. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00000000000101000001010000000000000101000000000000000000000101000001010000000000000000000001010000000000000101000001010000000000
Generating RTLIL representation for module `$paramod$16d80d586ac8775d92733cdbb65bd9b81b519852\$lut'.

2.19.39. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1262 using $paramod$16d80d586ac8775d92733cdbb65bd9b81b519852\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1266 using $paramod$0aeee6b06ac3ca9c6566f2f23ac81bbee53f8795\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1270 using $paramod$a93c89bcd1cb0787b9f5f3019bf6ed31844fccd0\$lut.

2.19.40. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00000100010011110000000001000100111110111011000011111111101110110000010000000100000000000000000000000100000001000000000000000000
Generating RTLIL representation for module `$paramod$f369297cad1744a342c33bd4eebd6fd1ef6d6077\$lut'.

2.19.41. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1269 using $paramod$f369297cad1744a342c33bd4eebd6fd1ef6d6077\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1265 using $paramod$ad0745271d4a184ae41d7a9b3cde3762a6214985\$lut.

2.19.42. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 8
Parameter \LUT = 256'1100110010101010110011001100110011001100110011001100110011001100111100001010101011110000111100001111000011110000111100001111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Generating RTLIL representation for module `$paramod$15f52481d736c863f9e7be8e6331114cf739484f\$lut'.

2.19.43. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1268 using $paramod$15f52481d736c863f9e7be8e6331114cf739484f\$lut.

2.19.44. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 5
Parameter \LUT = 32'10011100101011110110001101010000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=5\LUT=32'10011100101011110110001101010000'.

2.19.45. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1267 using $paramod\$lut\WIDTH=5\LUT=32'10011100101011110110001101010000.

2.19.46. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'0000011111111000111110000000011111111000000001110000011111111000
Generating RTLIL representation for module `$paramod$762d51d44f84bd183a787d0bf8be82d39e4b575a\$lut'.

2.19.47. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1264 using $paramod$762d51d44f84bd183a787d0bf8be82d39e4b575a\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1273 using $paramod\$lut\WIDTH=2\LUT=4'0100.

2.19.48. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'0000000000000000001010110010001000000000000000000000000000000000
Generating RTLIL representation for module `$paramod$a14d621cf380deba6b57e5edc5d62546a09f01f0\$lut'.

2.19.49. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1272 using $paramod$a14d621cf380deba6b57e5edc5d62546a09f01f0\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1280 using $paramod$15f52481d736c863f9e7be8e6331114cf739484f\$lut.

2.19.50. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'10001010111011111100111111111111011101010001000011001111111111110111010100010000001100000000000010001010111011110011000000000000
Generating RTLIL representation for module `$paramod$5747b4bace32a27b2f9e98f367a581ab5803eaa7\$lut'.

2.19.51. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1279 using $paramod$5747b4bace32a27b2f9e98f367a581ab5803eaa7\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1277 using $paramod$0aeee6b06ac3ca9c6566f2f23ac81bbee53f8795\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1278 using $paramod$6f8985542de0db58f37b55b68a6468bf2c2aa213\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1276 using $paramod$ad0745271d4a184ae41d7a9b3cde3762a6214985\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1275 using $paramod$762d51d44f84bd183a787d0bf8be82d39e4b575a\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1283 using $paramod\$lut\WIDTH=2\LUT=4'0100.

2.19.52. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'0000111101111111000000000000011100000000000001110000111101111111
Generating RTLIL representation for module `$paramod$671b02c36f2e678be038b501a65ea6e8b4abf53f\$lut'.

2.19.53. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1284 using $paramod$671b02c36f2e678be038b501a65ea6e8b4abf53f\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1286 using $paramod$ad0745271d4a184ae41d7a9b3cde3762a6214985\$lut.

2.19.54. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'01000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'01000000'.

2.19.55. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1287 using $paramod\$lut\WIDTH=3\LUT=8'01000000.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1288 using $paramod$0aeee6b06ac3ca9c6566f2f23ac81bbee53f8795\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1289 using $paramod$6f8985542de0db58f37b55b68a6468bf2c2aa213\$lut.

2.19.56. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'1111101110110000111111111011101111111011111110111111111111111111
Generating RTLIL representation for module `$paramod$f4de52dae16ba7a40becd3a7171e488afa4a0e1a\$lut'.

2.19.57. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1290 using $paramod$f4de52dae16ba7a40becd3a7171e488afa4a0e1a\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1292 using $paramod$a93c89bcd1cb0787b9f5f3019bf6ed31844fccd0\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1293 using $paramod$a93c89bcd1cb0787b9f5f3019bf6ed31844fccd0\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1291 using $paramod$6f8985542de0db58f37b55b68a6468bf2c2aa213\$lut.

2.19.58. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 8
Parameter \LUT = 256'1111100000000111000001111111100000000111111110001111100000000111000001111111100011111000000001111111100000000111000001111111100000000111111110001111100000000111111110000000011100000111111110001111100000000111000001111111100000000111111110001111100000000111
Generating RTLIL representation for module `$paramod$ea38278165fe7f733d3cc6dbfd5483bfad5c527f\$lut'.

2.19.59. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1285 using $paramod$ea38278165fe7f733d3cc6dbfd5483bfad5c527f\$lut.

2.19.60. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00010100001010111110101111010100111010111101010000010100001010111110101111010100000101000010101100010100001010111110101111010100
Generating RTLIL representation for module `$paramod$bdd407b70181487e83fc65f4cd593db73bdaf5ff\$lut'.

2.19.61. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1256 using $paramod$bdd407b70181487e83fc65f4cd593db73bdaf5ff\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1263 using $paramod$671b02c36f2e678be038b501a65ea6e8b4abf53f\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1274 using $paramod$671b02c36f2e678be038b501a65ea6e8b4abf53f\$lut.

2.19.62. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'1101010000000000110000001100000000000000110101000000000000000000
Generating RTLIL representation for module `$paramod$57d1711de5bf76e77644ef49d7d0cf276c820ab0\$lut'.

2.19.63. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1282 using $paramod$57d1711de5bf76e77644ef49d7d0cf276c820ab0\$lut.

2.19.64. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'0000000010001110100011100000000010001110000000000000000010001110
Generating RTLIL representation for module `$paramod$d490e7a0a3599a850d8d45ad9cc4a7131af197ed\$lut'.

2.19.65. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1281 using $paramod$d490e7a0a3599a850d8d45ad9cc4a7131af197ed\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1245 using $paramod\$lut\WIDTH=2\LUT=4'1000.

2.19.66. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 5
Parameter \LUT = 339804160
Generating RTLIL representation for module `$paramod\$lut\WIDTH=5\LUT=339804160'.

2.19.67. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1271 using $paramod\$lut\WIDTH=5\LUT=339804160.

2.19.68. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 8
Parameter \LUT = 256'1111111100000111000001111111111100000111000000000000000000000111000001110000000000000000000001111111111100000111000001111111111100000111000000000000000000000111111111110000011100000111111111111111111100000111000001111111111100000111000000000000000000000111
Generating RTLIL representation for module `$paramod$f5411621d00fdb26369b07c666f121f9dc700506\$lut'.

2.19.69. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1296 using $paramod$f5411621d00fdb26369b07c666f121f9dc700506\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1300 using $paramod$6f8985542de0db58f37b55b68a6468bf2c2aa213\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1302 using $paramod$f4de52dae16ba7a40becd3a7171e488afa4a0e1a\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1314 using $paramod$6f8985542de0db58f37b55b68a6468bf2c2aa213\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1312 using $paramod$f4de52dae16ba7a40becd3a7171e488afa4a0e1a\$lut.

2.19.70. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'1010111111010100111111110011111101010000001010110000000011000000
Generating RTLIL representation for module `$paramod$de98521aca2d1b562107761d889fd2010c3dbed2\$lut'.

2.19.71. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1299 using $paramod$de98521aca2d1b562107761d889fd2010c3dbed2\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1310 using $paramod$15f52481d736c863f9e7be8e6331114cf739484f\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1311 using $paramod$15f52481d736c863f9e7be8e6331114cf739484f\$lut.

2.19.72. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'10111111010011110100000010110000010000001011000010111111010011110100000010110000101111110100111110111111010011110100000010110000
Generating RTLIL representation for module `$paramod$245032ce746c7b2e2d3a0400c3a08932131413bc\$lut'.

2.19.73. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1309 using $paramod$245032ce746c7b2e2d3a0400c3a08932131413bc\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1313 using $paramod$f4de52dae16ba7a40becd3a7171e488afa4a0e1a\$lut.

2.19.74. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'0101000000000000000000001101010000000000110000000000000000000000
Generating RTLIL representation for module `$paramod$3a3ee9fe89b7adca463265ccd6ba90466ed59f56\$lut'.

2.19.75. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1308 using $paramod$3a3ee9fe89b7adca463265ccd6ba90466ed59f56\$lut.

2.19.76. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'11111000000001110000011111111000000001111111100011111000000001110000011111111000111110000000011111111000000001110000011111111000
Generating RTLIL representation for module `$paramod$ee4c90e0c2178f40afd512b1e90a5d9bd9cf9fce\$lut'.

2.19.77. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1307 using $paramod$ee4c90e0c2178f40afd512b1e90a5d9bd9cf9fce\$lut.

2.19.78. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'01110001
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'01110001'.

2.19.79. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1295 using $paramod\$lut\WIDTH=3\LUT=8'01110001.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1298 using $paramod$ad0745271d4a184ae41d7a9b3cde3762a6214985\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1301 using $paramod$f4de52dae16ba7a40becd3a7171e488afa4a0e1a\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1303 using $paramod$6f8985542de0db58f37b55b68a6468bf2c2aa213\$lut.

2.19.80. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 8
Parameter \LUT = 256'0000011100000000000000000000011111111111000001110000011111111111111111110000011100000111111111110000011100000000000000000000011111111111000001110000011111111111000001110000000000000000000001110000011100000000000000000000011111111111000001110000011111111111
Generating RTLIL representation for module `$paramod$8d2053800d800ea67a7067d098c18beb61a9c1bd\$lut'.

2.19.81. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1306 using $paramod$8d2053800d800ea67a7067d098c18beb61a9c1bd\$lut.

2.19.82. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 8
Parameter \LUT = 256'0000011111111000111110000000011111111000000001110000011111111000111110000000011100000111111110000000011111111000111110000000011111111000000001110000011111111000000001111111100011111000000001110000011111111000111110000000011111111000000001110000011111111000
Generating RTLIL representation for module `$paramod$e00ed179f7f41931da3002d7c4ff5bbe1fffe623\$lut'.

2.19.83. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1297 using $paramod$e00ed179f7f41931da3002d7c4ff5bbe1fffe623\$lut.

2.19.84. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'10110010
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'10110010'.

2.19.85. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1305 using $paramod\$lut\WIDTH=3\LUT=8'10110010.

2.19.86. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'0100110100000000000000000100110100000000010011010100110100000000
Generating RTLIL representation for module `$paramod$f38aa353bb538a124b3542f9752a00cdd4de2e62\$lut'.

2.19.87. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1304 using $paramod$f38aa353bb538a124b3542f9752a00cdd4de2e62\$lut.

2.19.88. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'10111111000010111111111111111111000010111011111100001111000011110000101110111111000011110000111110111111000010111111111111111111
Generating RTLIL representation for module `$paramod$bc83e870481c13327ca3972e6c14feec4539d43d\$lut'.

2.19.89. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1319 using $paramod$bc83e870481c13327ca3972e6c14feec4539d43d\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1321 using $paramod$15f52481d736c863f9e7be8e6331114cf739484f\$lut.

2.19.90. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0100101110110100
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0100101110110100'.

2.19.91. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1320 using $paramod\$lut\WIDTH=4\LUT=16'0100101110110100.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1322 using $paramod$f4de52dae16ba7a40becd3a7171e488afa4a0e1a\$lut.

2.19.92. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'0100110101011111
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'0100110101011111'.

2.19.93. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1323 using $paramod\$lut\WIDTH=4\LUT=16'0100110101011111.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1324 using $paramod$6f8985542de0db58f37b55b68a6468bf2c2aa213\$lut.

2.19.94. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 5
Parameter \LUT = 1771476585
Generating RTLIL representation for module `$paramod\$lut\WIDTH=5\LUT=1771476585'.

2.19.95. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1318 using $paramod\$lut\WIDTH=5\LUT=1771476585.

2.19.96. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'1000111000000000000000001000111000000000100011101000111000000000
Generating RTLIL representation for module `$paramod$ae723dfb4383bc4714915081b70b2e47323466c4\$lut'.

2.19.97. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1294 using $paramod$ae723dfb4383bc4714915081b70b2e47323466c4\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1316 using $paramod\$lut\WIDTH=3\LUT=8'10110010.

2.19.98. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00000000000001110000111101111111000011110111111100000000000001110000111101111111000000000000011100000000000001110000111101111111
Generating RTLIL representation for module `$paramod$8dfbd020150c5c395f103ad242c4df86d1a61838\$lut'.

2.19.99. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1317 using $paramod$8dfbd020150c5c395f103ad242c4df86d1a61838\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1315 using $paramod$f38aa353bb538a124b3542f9752a00cdd4de2e62\$lut.

2.19.100. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'10010110
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'10010110'.

2.19.101. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1328 using $paramod\$lut\WIDTH=3\LUT=8'10010110.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1332 using $paramod$f4de52dae16ba7a40becd3a7171e488afa4a0e1a\$lut.

2.19.102. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'1010100111110000111100111111111101010110000011110000110000000000
Generating RTLIL representation for module `$paramod$998ddb4f1073c706dd2963ddf93ac059c9ca667c\$lut'.

2.19.103. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1331 using $paramod$998ddb4f1073c706dd2963ddf93ac059c9ca667c\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1334 using $paramod$15f52481d736c863f9e7be8e6331114cf739484f\$lut.

2.19.104. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'10111111010000001011111110111111010011111011000001001111010011110100000010111111010000000100000010110000010011111011000010110000
Generating RTLIL representation for module `$paramod$9ee7c1181af7083cfda88928b287a4e7a5f8d000\$lut'.

2.19.105. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1333 using $paramod$9ee7c1181af7083cfda88928b287a4e7a5f8d000\$lut.

2.19.106. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 8
Parameter \LUT = 256'1111101111111111101100101111101100100000101100100000000000100000001000001011001000000000001000001111101111111111101100101111101100100000101100100000000000100000111110111111111110110010111110111111101111111111101100101111101100100000101100100000000000100000
Generating RTLIL representation for module `$paramod$d7573521a61557733a88473059e7fd907fb8c314\$lut'.

2.19.107. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1336 using $paramod$d7573521a61557733a88473059e7fd907fb8c314\$lut.

2.19.108. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'0101000000001001000011000000000000000000000000000000000000000000
Generating RTLIL representation for module `$paramod$d70342ba5cd5d60d7fad6e77fa66f29778bf101a\$lut'.

2.19.109. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1338 using $paramod$d70342ba5cd5d60d7fad6e77fa66f29778bf101a\$lut.

2.19.110. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00111110000011011111100011001011001100010000001011001110111111010011110000001111001101100000010100110011000000000011001100000000
Generating RTLIL representation for module `$paramod$0f3184f80c6704608d88b9bf288aaf74aa719e80\$lut'.

2.19.111. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1340 using $paramod$0f3184f80c6704608d88b9bf288aaf74aa719e80\$lut.

2.19.112. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00000000000000100000000000100000000000110011000000000000000000100000000000000000000000000000000000000000100010100000000000000000
Generating RTLIL representation for module `$paramod$88fff25768691b32da056734d45768fb6f4966f2\$lut'.

2.19.113. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1346 using $paramod$88fff25768691b32da056734d45768fb6f4966f2\$lut.

2.19.114. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'11110100111100000101001011111100111110111111111100000100111111110000101100001111101011010000001100000100000000001111101100000000
Generating RTLIL representation for module `$paramod$6dfef03c5c7141ade39c98ec823f9bcd63662fd2\$lut'.

2.19.115. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1347 using $paramod$6dfef03c5c7141ade39c98ec823f9bcd63662fd2\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1345 using $paramod\$lut\WIDTH=3\LUT=8'01000000.

2.19.116. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 5
Parameter \LUT = 32'11101000000101110001011111101000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=5\LUT=32'11101000000101110001011111101000'.

2.19.117. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1344 using $paramod\$lut\WIDTH=5\LUT=32'11101000000101110001011111101000.

2.19.118. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00001011000001000000010000001011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Generating RTLIL representation for module `$paramod$c72578f8bbd1a4927352d123ac6a0187d13c7402\$lut'.

2.19.119. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1339 using $paramod$c72578f8bbd1a4927352d123ac6a0187d13c7402\$lut.

2.19.120. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 4
Parameter \LUT = 16'1011111101000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=4\LUT=16'1011111101000000'.

2.19.121. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1341 using $paramod\$lut\WIDTH=4\LUT=16'1011111101000000.

2.19.122. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00110000001100110111111111110111000000000000000000010000001100010000000000000000000100000011000100110000001100110111111111110111
Generating RTLIL representation for module `$paramod$aaa4fc3868921c63315f7e17e436efd110a1ce7b\$lut'.

2.19.123. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1343 using $paramod$aaa4fc3868921c63315f7e17e436efd110a1ce7b\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1342 using $paramod\$lut\WIDTH=2\LUT=4'0100.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1350 using $paramod\$lut\WIDTH=2\LUT=4'0100.

2.19.124. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'11111111000010101111111111111111111111110000111111111111111111110000101100101111000011110000001110111111000010111111111111111111
Generating RTLIL representation for module `$paramod$ef6e67a53a57d3fa6d74c2c65f002d73e5591ba1\$lut'.

2.19.125. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1351 using $paramod$ef6e67a53a57d3fa6d74c2c65f002d73e5591ba1\$lut.

2.19.126. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 5
Parameter \LUT = 32'11101111000100000001000011101111
Generating RTLIL representation for module `$paramod\$lut\WIDTH=5\LUT=32'11101111000100000001000011101111'.

2.19.127. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1349 using $paramod\$lut\WIDTH=5\LUT=32'11101111000100000001000011101111.

2.19.128. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'1111110011101000111010001100000000000000000000000000000000000000
Generating RTLIL representation for module `$paramod$a9fddb90f58c5a2f2fb7fb083c37189d965365cd\$lut'.

2.19.129. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1348 using $paramod$a9fddb90f58c5a2f2fb7fb083c37189d965365cd\$lut.

2.19.130. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 5
Parameter \LUT = 15663120
Generating RTLIL representation for module `$paramod\$lut\WIDTH=5\LUT=15663120'.

2.19.131. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1353 using $paramod\$lut\WIDTH=5\LUT=15663120.

2.19.132. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 5
Parameter \LUT = 32'11110001111111110000111000000000
Generating RTLIL representation for module `$paramod\$lut\WIDTH=5\LUT=32'11110001111111110000111000000000'.

2.19.133. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1354 using $paramod\$lut\WIDTH=5\LUT=32'11110001111111110000111000000000.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1352 using $paramod\$lut\WIDTH=2\LUT=4'1000.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1326 using $paramod\$lut\WIDTH=2\LUT=4'0100.

2.19.134. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'01101001
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'01101001'.

2.19.135. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1330 using $paramod\$lut\WIDTH=3\LUT=8'01101001.

2.19.136. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00010011001100011110110000111110111011001100111000010011110000011110110011001110000100111100000100010011001100011110110000111110
Generating RTLIL representation for module `$paramod$d754e82840bb097a9dee626faf18112e2ac6ba9b\$lut'.

2.19.137. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1337 using $paramod$d754e82840bb097a9dee626faf18112e2ac6ba9b\$lut.

2.19.138. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 2
Parameter \LUT = 4'1001
Generating RTLIL representation for module `$paramod\$lut\WIDTH=2\LUT=4'1001'.

2.19.139. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1327 using $paramod\$lut\WIDTH=2\LUT=4'1001.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1335 using $paramod\$lut\WIDTH=2\LUT=4'0100.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1329 using $paramod\$lut\WIDTH=3\LUT=8'10110010.

2.19.140. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00000000000100010001000100000000000001110111000001110000000001110000011101110000011100000000011100000001000100000001000000000001
Generating RTLIL representation for module `$paramod$5d78c0c768cd6791392f7334d3d43f053e31e383\$lut'.

2.19.141. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1325 using $paramod$5d78c0c768cd6791392f7334d3d43f053e31e383\$lut.

2.19.142. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 2
Parameter \LUT = 4'0110
Generating RTLIL representation for module `$paramod\$lut\WIDTH=2\LUT=4'0110'.

2.19.143. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1359 using $paramod\$lut\WIDTH=2\LUT=4'0110.

2.19.144. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'1000111001110001011100011000111001110001100011101000111001110001
Generating RTLIL representation for module `$paramod$a8c5e02d8964cd06da23c17ed92fafe794de6615\$lut'.

2.19.145. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1365 using $paramod$a8c5e02d8964cd06da23c17ed92fafe794de6615\$lut.

2.19.146. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'1111000111111111111111111111111100001110000000000000000000000000
Generating RTLIL representation for module `$paramod$801ee34d9fa0fd028667a1b5dcb580d4c632fe1e\$lut'.

2.19.147. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1371 using $paramod$801ee34d9fa0fd028667a1b5dcb580d4c632fe1e\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1357 using $paramod\$lut\WIDTH=2\LUT=4'0110.

2.19.148. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'0100110110110010101100100100110110110010010011010100110110110010
Generating RTLIL representation for module `$paramod$75b780655b19dc44306a0c85a7982e929fc46468\$lut'.

2.19.149. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1363 using $paramod$75b780655b19dc44306a0c85a7982e929fc46468\$lut.

2.19.150. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'0000001100010111000101110011111111111100111010001110100011000000
Generating RTLIL representation for module `$paramod$78ca38af3a1fa489ab7e4c2e2228f11fe731d51e\$lut'.

2.19.151. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1369 using $paramod$78ca38af3a1fa489ab7e4c2e2228f11fe731d51e\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1375 using $paramod\$lut\WIDTH=2\LUT=4'1000.

2.19.152. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'1011001001001101010011011011001001001101101100101011001001001101
Generating RTLIL representation for module `$paramod$e39dcb296ebd30fff7828e854c6f46ea04b5da7f\$lut'.

2.19.153. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1362 using $paramod$e39dcb296ebd30fff7828e854c6f46ea04b5da7f\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1368 using $paramod\$lut\WIDTH=2\LUT=4'1001.

2.19.154. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 6
Parameter \LUT = 64'1110101000011010101111110100111100010101111001010100000010110000
Generating RTLIL representation for module `$paramod$b5e3a51be1a310e11368e5ffd816511d21ee65d2\$lut'.

2.19.155. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1374 using $paramod$b5e3a51be1a310e11368e5ffd816511d21ee65d2\$lut.

2.19.156. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 5
Parameter \LUT = 32'10000111011110000111100010000111
Generating RTLIL representation for module `$paramod\$lut\WIDTH=5\LUT=32'10000111011110000111100010000111'.

2.19.157. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1358 using $paramod\$lut\WIDTH=5\LUT=32'10000111011110000111100010000111.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1364 using $paramod$a8c5e02d8964cd06da23c17ed92fafe794de6615\$lut.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1370 using $paramod\$lut\WIDTH=2\LUT=4'0110.

2.19.158. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 5
Parameter \LUT = 1270133835
Generating RTLIL representation for module `$paramod\$lut\WIDTH=5\LUT=1270133835'.

2.19.159. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1361 using $paramod\$lut\WIDTH=5\LUT=1270133835.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1367 using $paramod\$lut\WIDTH=2\LUT=4'1001.

2.19.160. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 3
Parameter \LUT = 8'10110100
Generating RTLIL representation for module `$paramod\$lut\WIDTH=3\LUT=8'10110100'.

2.19.161. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1373 using $paramod\$lut\WIDTH=3\LUT=8'10110100.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1360 using $paramod\$lut\WIDTH=3\LUT=8'01101001.

2.19.162. Executing AST frontend in derive mode using pre-parsed AST for module `\$lut'.
Parameter \WIDTH = 7
Parameter \LUT = 128'00010111000110000111000110001110111010001110011110001110011100011110100011100111100011100111000100010111000110000111000110001110
Generating RTLIL representation for module `$paramod$e6396d0adf5876c1631a928f51af6212ace8c84a\$lut'.

2.19.163. Continuing TECHMAP pass.
Mapping mat_vect_mult2.$abc$1203$auto$blifparse.cc:375:parse_blif$1366 using $paramod$e6396d0adf5876c1631a928f51af6212ace8c84a\$lut.
No more expansions possible.

2.20. Executing DFFINIT pass (set INIT param on FF cells).
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$336.INIT (port=Q, net=\m_axis_tdata [16]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$307.INIT (port=Q, net=\inp_vect_reg[1] [7]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$308.INIT (port=Q, net=\inp_vect_reg[0] [0]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$309.INIT (port=Q, net=\inp_vect_reg[0] [1]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$310.INIT (port=Q, net=\inp_vect_reg[0] [2]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$311.INIT (port=Q, net=\inp_vect_reg[0] [3]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$312.INIT (port=Q, net=\inp_vect_reg[0] [4]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$313.INIT (port=Q, net=\inp_vect_reg[0] [5]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$314.INIT (port=Q, net=\inp_vect_reg[0] [6]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$304.INIT (port=Q, net=\inp_vect_reg[1] [4]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$303.INIT (port=Q, net=\inp_vect_reg[1] [3]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$301.INIT (port=Q, net=\inp_vect_reg[1] [1]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$300.INIT (port=Q, net=\inp_vect_reg[1] [0]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$305.INIT (port=Q, net=\inp_vect_reg[1] [5]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$302.INIT (port=Q, net=\inp_vect_reg[1] [2]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$306.INIT (port=Q, net=\inp_vect_reg[1] [6]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$319.INIT (port=Q, net=\slice) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$316.INIT (port=Q, net=\count) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$315.INIT (port=Q, net=\inp_vect_reg[0] [7]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$337.INIT (port=Q, net=\s_axis_tready) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$317.INIT (port=Q, net=\m_axis_tlast) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$320.INIT (port=Q, net=\m_axis_tdata [0]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$321.INIT (port=Q, net=\m_axis_tdata [1]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$322.INIT (port=Q, net=\m_axis_tdata [2]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$323.INIT (port=Q, net=\m_axis_tdata [3]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$324.INIT (port=Q, net=\m_axis_tdata [4]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$325.INIT (port=Q, net=\m_axis_tdata [5]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$326.INIT (port=Q, net=\m_axis_tdata [6]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$327.INIT (port=Q, net=\m_axis_tdata [7]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$328.INIT (port=Q, net=\m_axis_tdata [8]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$329.INIT (port=Q, net=\m_axis_tdata [9]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$330.INIT (port=Q, net=\m_axis_tdata [10]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$331.INIT (port=Q, net=\m_axis_tdata [11]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$332.INIT (port=Q, net=\m_axis_tdata [12]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$333.INIT (port=Q, net=\m_axis_tdata [13]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$334.INIT (port=Q, net=\m_axis_tdata [14]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$335.INIT (port=Q, net=\m_axis_tdata [15]) to 1'0.
Setting mat_vect_mult2.$auto$simplemap.cc:496:simplemap_adff$318.INIT (port=Q, net=\m_axis_tvalid) to 1'0.
Removed 0 unused cells and 496 unused wires.

2.21. Executing HIERARCHY pass (managing design hierarchy).

2.21.1. Analyzing design hierarchy..
Top module:  \mat_vect_mult2

2.21.2. Analyzing design hierarchy..
Top module:  \mat_vect_mult2
Removed 0 unused modules.

2.22. Printing statistics.

=== mat_vect_mult2 ===

   Number of wires:                326
   Number of wire bits:            416
   Number of public wires:          19
   Number of public wire bits:      77
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                393
     FDCE                           38
     LUT2                           24
     LUT3                           26
     LUT4                            7
     LUT5                           10
     LUT6                          180
     MUXCY                          16
     MUXF7                          62
     MUXF8                          13
     XORCY                          17

2.23. Executing CHECK pass (checking for obvious problems).
checking module mat_vect_mult2..
found and reported 0 problems.

2.24. Executing EDIF backend.

End of script. Logfile hash: 13194a82f4, CPU: user 2.06s system 0.13s
Yosys 0.7 (git sha1 UNKNOWN, clang 9.0.0 -fPIC -Os)
Time spent: 61% 15x read_verilog (1 sec), 14% 4x techmap (0 sec), ...
